{"ast":null,"code":"import axios from 'axios';\nimport AlertComponent from '@/components/AlertComponent.vue';\nimport CardFormComponent from '@/components/cards/CardFormComponent.vue';\nimport LoaderComponent from '@/components/LoaderComponent.vue'; // import ButtonComponent from '@/components/ButtonComponent.vue'\n\nexport default {\n  data() {\n    return {\n      alert: '',\n      user_info: null,\n      lesson_data: null,\n      url_get_group: this.$route.query,\n      number_day: new Date().getDate(),\n      get_day: new Date().getDay(),\n      max_day: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate()\n    };\n  },\n\n  props: {\n    is_auth: Number,\n    token: String\n  },\n  components: {\n    CardFormComponent,\n    LoaderComponent,\n    AlertComponent\n  },\n  methods: {\n    user: function () {\n      if (this.is_auth >= 0) {\n        axios.get('http://localhost:5000/api/user/user-info?access_token=' + this.token, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          this.user_info = response.data[0].message; // Вызывать методы использующие пользовательские данные ниже\n\n          this.load_lesson(this.user_info.organization_id, this.user_info.user_id, this.user_info.group_id, this.user_info.role);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n\n    load_lesson(organizationId, userId, groupId, role) {\n      // Выгрузка данных\n      axios.get('http://localhost:5000/api/journal/show?organization_id=' + organizationId + '&&user_id=' + userId + '&&group_id=' + groupId + '&&role=' + role, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response.data[0].message);\n        this.lesson_data = response.data[0].message.list;\n      }).catch(function (error) {\n        console.log(error);\n      }); // END\n    }\n\n  },\n\n  mounted() {\n    this.user();\n  }\n\n};","map":{"version":3,"mappings":"AAyCA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,eAAP,MAA4B,kCAA5B,C,CACA;;AAEA,eAAe;EACbC,IAAG,GAAK;IACN,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,SAAS,EAAE,IAFN;MAGLC,WAAW,EAAE,IAHR;MAILC,aAAa,EAAE,KAAKC,MAAL,CAAYC,KAJtB;MAKLC,UAAU,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EALP;MAMLC,OAAO,EAAE,IAAIF,IAAJ,GAAWG,MAAX,EANJ;MAOLC,OAAO,EAAE,IAAIJ,IAAJ,CAAS,IAAIA,IAAJ,GAAWK,WAAX,EAAT,EAAmC,IAAIL,IAAJ,GAAWM,QAAX,KAAwB,CAA3D,EAA8D,CAA9D,EAAiEL,OAAjE;IAPJ,CAAP;EASD,CAXY;;EAYbM,KAAK,EAAE;IACLC,OAAO,EAAEC,MADJ;IAELC,KAAK,EAAEC;EAFF,CAZM;EAgBbC,UAAU,EAAE;IACVtB,iBADU;IAEVC,eAFU;IAGVF;EAHU,CAhBC;EAqBbwB,OAAO,EAAE;IACPC,IAAI,EAAE,YAAY;MAChB,IAAI,KAAKN,OAAL,IAAgB,CAApB,EAAuB;QACrBpB,KAAK,CAAC2B,GAAN,CAAU,2DAA2D,KAAKL,KAA1E,EACE;UACEM,OAAO,EAAE;YACP,gBAAgB;UADT;QADX,CADF,EAMGC,IANH,CAMSC,QAAD,IAAc;UAClB,KAAKxB,SAAL,GAAiBwB,QAAQ,CAAC1B,IAAT,CAAc,CAAd,EAAiB2B,OAAlC,CADkB,CAElB;;UACA,KAAKC,WAAL,CACE,KAAK1B,SAAL,CAAe2B,eADjB,EAEE,KAAK3B,SAAL,CAAe4B,OAFjB,EAGE,KAAK5B,SAAL,CAAe6B,QAHjB,EAIE,KAAK7B,SAAL,CAAe8B,IAJjB;QAMD,CAfH,EAgBGC,KAhBH,CAgBS,UAAUC,KAAV,EAAiB;UACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACD,CAlBH;MAmBF;IACD,CAvBM;;IAwBPN,WAAU,CAAGS,cAAH,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCP,IAApC,EAA0C;MAClD;MACApC,KAAK,CAAC2B,GAAN,CAAU,4DAA4Dc,cAA5D,GAA6E,YAA7E,GAA4FC,MAA5F,GAAqG,aAArG,GAAqHC,OAArH,GAA+H,SAA/H,GAA2IP,IAArJ,EACE;QACER,OAAO,EAAE;UACP,gBAAgB;QADT;MADX,CADF,EAMGC,IANH,CAMSC,QAAD,IAAc;QAClBS,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAAC1B,IAAT,CAAc,CAAd,EAAiB2B,OAA7B;QACA,KAAKxB,WAAL,GAAmBuB,QAAQ,CAAC1B,IAAT,CAAc,CAAd,EAAiB2B,OAAjB,CAAyBa,IAA5C;MACD,CATH,EAUGP,KAVH,CAUS,UAAUC,KAAV,EAAiB;QACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CAZH,EAFkD,CAelD;IACF;;EAxCO,CArBI;;EA+DbO,OAAM,GAAK;IACT,KAAKnB,IAAL;EACF;;AAjEa,CAAf","names":["axios","AlertComponent","CardFormComponent","LoaderComponent","data","alert","user_info","lesson_data","url_get_group","$route","query","number_day","Date","getDate","get_day","getDay","max_day","getFullYear","getMonth","props","is_auth","Number","token","String","components","methods","user","get","headers","then","response","message","load_lesson","organization_id","user_id","group_id","role","catch","error","console","log","organizationId","userId","groupId","list","mounted"],"sourceRoot":"","sources":["/home/vuacheslavmironov/PAD/web/src/views/JournaShowlView.vue"],"sourcesContent":["<template>\n  <main class=\"container-fluid\">\n    <!-- Компонент загрузки -->\n    <LoaderComponent />\n    <!-- End -->\n    <!-- Сообщение о процессе -->\n    <AlertComponent css_class=\"toast align-items-cente right\" v-bind:mess=\"this.alert\" />\n    <!-- END -->\n    <div class=\"mx-auto\">\n      <CardFormComponent class=\"mt-3 mb-5 w-90\">\n        <table id=\"journal-table\" class=\"table table-success table-bordered\">\n          <thead>\n            <tr>\n              <th class=\"delimetr\"></th>\n              <th ref=\"tableDays\" v-for=\"i in this.max_day\" v-bind:key=\"i\">\n                <p class=\"w-find-journal\">ПН</p>\n                <p class=\"text-center w-find-journal\">{{ i }}</p>\n                <br>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <!-- Вывод студентов -->\n            <tr>\n              <td>Математика</td>\n              <td\n                ref=\"tableItems\"\n                v-for=\"(itemValue, index) in this.max_day\"\n                v-bind:key=\"itemValue\"\n                v-bind:class=\"Number(this.number_day) === (index + 1) ? 'active-day' : ''\"\n              >\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </CardFormComponent>\n    </div>\n  </main>\n</template>\n\n<script>\nimport axios from 'axios'\nimport AlertComponent from '@/components/AlertComponent.vue'\nimport CardFormComponent from '@/components/cards/CardFormComponent.vue'\nimport LoaderComponent from '@/components/LoaderComponent.vue'\n// import ButtonComponent from '@/components/ButtonComponent.vue'\n\nexport default {\n  data () {\n    return {\n      alert: '',\n      user_info: null,\n      lesson_data: null,\n      url_get_group: this.$route.query,\n      number_day: new Date().getDate(),\n      get_day: new Date().getDay(),\n      max_day: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate()\n    }\n  },\n  props: {\n    is_auth: Number,\n    token: String\n  },\n  components: {\n    CardFormComponent,\n    LoaderComponent,\n    AlertComponent\n  },\n  methods: {\n    user: function () {\n      if (this.is_auth >= 0) {\n        axios.get('http://localhost:5000/api/user/user-info?access_token=' + this.token,\n          {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          .then((response) => {\n            this.user_info = response.data[0].message\n            // Вызывать методы использующие пользовательские данные ниже\n            this.load_lesson(\n              this.user_info.organization_id,\n              this.user_info.user_id,\n              this.user_info.group_id,\n              this.user_info.role\n            )\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      }\n    },\n    load_lesson (organizationId, userId, groupId, role) {\n      // Выгрузка данных\n      axios.get('http://localhost:5000/api/journal/show?organization_id=' + organizationId + '&&user_id=' + userId + '&&group_id=' + groupId + '&&role=' + role,\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        .then((response) => {\n          console.log(response.data[0].message)\n          this.lesson_data = response.data[0].message.list\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n      // END\n    }\n  },\n  mounted () {\n    this.user()\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}