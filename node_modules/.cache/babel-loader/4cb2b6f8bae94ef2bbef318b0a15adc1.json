{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"mx-auto\\\"><div class=\\\"row p-5\\\"><h2 class=\\\"col\\\"><b>Все студенты</b></h2><div class=\\\"container\\\"><div class=\\\"row\\\"><!-- &lt;div class=&quot;col-3&quot;&gt;\\n                            &lt;div class=&quot;mb-5&quot;&gt;\\n                                &lt;h3&gt;А&lt;/h3&gt;\\n                                &lt;ol&gt;\\n                                    &lt;li&gt;&lt;a href=&quot;/journal-show?user_id=4&amp;&amp;group_id=1&quot;&gt;Алексей Алексеев&lt;/a&gt;&lt;/li&gt;\\n                                &lt;/ol&gt;\\n                            &lt;/div&gt;\\n                        &lt;/div&gt; --></div></div></div></div>\", 1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoaderComponent = _resolveComponent(\"LoaderComponent\");\n\n  const _component_AlertComponent = _resolveComponent(\"AlertComponent\");\n\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createCommentVNode(\" Компонент загрузки \"), _createVNode(_component_LoaderComponent), _createCommentVNode(\" End \"), _createCommentVNode(\" Сообщение о процессе \"), _createVNode(_component_AlertComponent, {\n    css_class: \"toast align-items-cente right\",\n    mess: this.alert\n  }, null, 8\n  /* PROPS */\n  , [\"mess\"]), _createCommentVNode(\" END \"), _hoisted_2]);\n}","map":{"version":3,"mappings":";;EACUA,KAAK,EAAC;;;;;;;;;;uBAAZC,oBA0BO,MA1BP,cA0BO,CAzBHC,2CAyBG,EAxBHC,aAAmBC,0BAAnB,CAwBG,EAvBHF,4BAuBG,EAtBHA,6CAsBG,EArBHC,aAAqFE,yBAArF,EAAqF;IAArEC,SAAS,EAAC,+BAA2D;IAApBC,IAAI,OAAOC;EAAS,CAArF;;EAAA,WAqBG,EApBHN,4BAoBG,EAnBHO,UAmBG,CA1BP","names":["class","_createElementBlock","_createCommentVNode","_createVNode","_component_LoaderComponent","_component_AlertComponent","css_class","mess","alert","_hoisted_2"],"sourceRoot":"","sources":["/home/vuacheslavmironov/PAD/web/src/views/StudentsAlllView.vue"],"sourcesContent":["<template>\n    <main class=\"container-fluid\">\n        <!-- Компонент загрузки -->\n        <LoaderComponent />\n        <!-- End -->\n        <!-- Сообщение о процессе -->\n        <AlertComponent css_class=\"toast align-items-cente right\" v-bind:mess=\"this.alert\" />\n        <!-- END -->\n        <div class=\"mx-auto\">\n            <div class=\"row p-5\">\n                <h2 class=\"col\">\n                    <b>Все студенты</b>\n                </h2>\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <!-- <div class=\"col-3\">\n                            <div class=\"mb-5\">\n                                <h3>А</h3>\n                                <ol>\n                                    <li><a href=\"/journal-show?user_id=4&&group_id=1\">Алексей Алексеев</a></li>\n                                </ol>\n                            </div>\n                        </div> -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n\n<script>\nimport axios from 'axios'\nimport AlertComponent from '@/components/AlertComponent.vue'\nimport LoaderComponent from '@/components/LoaderComponent.vue'\n\nexport default {\n  data () {\n    return {\n      alert: null,\n      user_info: null,\n      user_list: null\n    }\n  },\n  props: {\n    is_auth: Number,\n    token: String\n  },\n  components: {\n    LoaderComponent,\n    AlertComponent\n  },\n  methods: {\n    user: function () {\n      if (this.is_auth >= 0) {\n        axios.get('http://localhost:5000/api/user/user-info?access_token=' + this.token,\n          {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }\n        )\n          .then((response) => {\n            this.user_info = response.data[0].message\n            // Вызывать методы использующие пользовательские данные ниже\n            this.all_group(this.user_info.organization_id)\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      }\n    },\n    all_group (organizationId) {\n      axios.get('http://localhost:5000/api/group/show-group?group_id=-1' + '&&organization_id=' + organizationId,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          }\n        })\n        .then((response) => {\n          response.data[0].message.list_belongs.sort((a, b) => a.last_name > b.last_name ? 1 : -1)\n          var users = response.data[0].message.list_belongs\n          var list = [\n            { sumbol: 'А', users: [] },\n            { sumbol: 'Б', users: [] },\n            { sumbol: 'В', users: [] },\n            { sumbol: 'Г', users: [] },\n            { sumbol: 'Д', users: [] },\n            { sumbol: 'Е', users: [] },\n            { sumbol: 'Ё', users: [] },\n            { sumbol: 'Ж', users: [] },\n            { sumbol: 'З', users: [] },\n            { sumbol: 'И', users: [] },\n            { sumbol: 'Й', users: [] },\n            { sumbol: 'К', users: [] },\n            { sumbol: 'Л', users: [] },\n            { sumbol: 'М', users: [] },\n            { sumbol: 'Н', users: [] },\n            { sumbol: 'О', users: [] },\n            { sumbol: 'П', users: [] },\n            { sumbol: 'Р', users: [] },\n            { sumbol: 'С', users: [] },\n            { sumbol: 'Т', users: [] },\n            { sumbol: 'У', users: [] },\n            { sumbol: 'Ф', users: [] },\n            { sumbol: 'Х', users: [] },\n            { sumbol: 'Ц', users: [] },\n            { sumbol: 'Ч', users: [] },\n            { sumbol: 'Ш', users: [] },\n            { sumbol: 'Щ', users: [] },\n            { sumbol: 'ъ', users: [] },\n            { sumbol: 'Ы', users: [] },\n            { sumbol: 'Ь', users: [] },\n            { sumbol: 'Э', users: [] },\n            { sumbol: 'Ю', users: [] },\n            { sumbol: 'Я', users: [] }\n          ]\n          var count = 0\n          while (count < users.length) {\n            for (var i = 0; i < list.length; i++) {\n              if (list[i].sumbol === users[count].last_name[0]) {\n                list[i].users.push({\n                  user_id: users[count].user_id,\n                  last_name: users[count].last_name,\n                  first_name: users[count].first_name,\n                  group_id: users[count].group_id\n                })\n              }\n            }\n          }\n          this.user_list = list\n        })\n      console.log(this.user_list)\n    }\n  },\n  mounted () {\n    this.user()\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}