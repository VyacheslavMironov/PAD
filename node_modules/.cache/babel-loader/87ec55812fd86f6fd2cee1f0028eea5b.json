{"ast":null,"code":"import axios from 'axios';\nimport AlertComponent from '@/components/AlertComponent.vue'; // import CardFormComponent from '@/components/cards/CardFormComponent.vue'\n\nimport LoaderComponent from '@/components/LoaderComponent.vue';\nimport ButtonComponent from '@/components/ButtonComponent.vue';\nimport CardFormComponent from '@/components/cards/CardFormComponent.vue';\nexport default {\n  data() {\n    return {\n      active: null,\n      group_id: this.$route.query.group_id,\n      alert: null,\n      user_info: null,\n      user_list: null,\n      list_belongs: null\n    };\n  },\n\n  props: {\n    is_auth: Number,\n    token: String\n  },\n  components: {\n    // CardFormComponent,\n    LoaderComponent,\n    ButtonComponent,\n    AlertComponent,\n    CardFormComponent\n  },\n  methods: {\n    user: function () {\n      if (this.is_auth >= 0) {\n        axios.get('http://localhost:5000/api/user/user-info?access_token=' + this.token, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          this.user_info = response.data[0].message; // Вызывать методы использующие пользовательские данные ниже\n\n          this.show_group(this.user_info.organization_id);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n\n    show_group(organizationId) {\n      axios.get('http://localhost:5000/api/group/show-group?group_id=' + this.group_id + '&&organization_id=' + organizationId, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(response => {\n        this.list_belongs = response.data[0].message.list_belongs;\n        this.user_list = response.data[0].message.user_list;\n      });\n    },\n\n    item_active(index, block, item) {\n      console.log(index);\n      console.log(block);\n      console.log(item);\n    },\n\n    add() {},\n\n    remove() {},\n\n    group_update() {}\n\n  },\n\n  mounted() {\n    this.user();\n  }\n\n};","map":{"version":3,"mappings":"AAyEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B,C,CACA;;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AAEA,eAAe;EACbC,IAAG,GAAK;IACN,OAAO;MACLC,MAAM,EAAE,IADH;MAELC,QAAQ,EAAE,KAAKC,MAAL,CAAYC,KAAZ,CAAkBF,QAFvB;MAGLG,KAAK,EAAE,IAHF;MAILC,SAAS,EAAE,IAJN;MAKLC,SAAS,EAAE,IALN;MAMLC,YAAY,EAAE;IANT,CAAP;EAQD,CAVY;;EAWbC,KAAK,EAAE;IACLC,OAAO,EAAEC,MADJ;IAELC,KAAK,EAAEC;EAFF,CAXM;EAebC,UAAU,EAAE;IACV;IACAjB,eAFU;IAGVC,eAHU;IAIVF,cAJU;IAKVG;EALU,CAfC;EAsBbgB,OAAO,EAAE;IACPC,IAAI,EAAE,YAAY;MAChB,IAAI,KAAKN,OAAL,IAAgB,CAApB,EAAuB;QACrBf,KAAK,CAACsB,GAAN,CAAU,2DAA2D,KAAKL,KAA1E,EACE;UACEM,OAAO,EAAE;YACP,gBAAgB;UADT;QADX,CADF,EAOGC,IAPH,CAOSC,QAAD,IAAc;UAClB,KAAKd,SAAL,GAAiBc,QAAQ,CAACpB,IAAT,CAAc,CAAd,EAAiBqB,OAAlC,CADkB,CAElB;;UACA,KAAKC,UAAL,CAAgB,KAAKhB,SAAL,CAAeiB,eAA/B;QACD,CAXH,EAYGC,KAZH,CAYS,UAAUC,KAAV,EAAiB;UACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACD,CAdH;MAeF;IACD,CAnBM;;IAoBPH,UAAS,CAAGM,cAAH,EAAmB;MAC1BjC,KAAK,CAACsB,GAAN,CAAU,yDAAyD,KAAKf,QAA9D,GAAyE,oBAAzE,GAAgG0B,cAA1G,EACE;QACEV,OAAO,EAAE;UACP,gBAAgB,kBADT;UAEP,+BAA+B;QAFxB;MADX,CADF,EAOGC,IAPH,CAOSC,QAAD,IAAc;QAClB,KAAKZ,YAAL,GAAoBY,QAAQ,CAACpB,IAAT,CAAc,CAAd,EAAiBqB,OAAjB,CAAyBb,YAA7C;QACA,KAAKD,SAAL,GAAiBa,QAAQ,CAACpB,IAAT,CAAc,CAAd,EAAiBqB,OAAjB,CAAyBd,SAA1C;MACD,CAVH;IAWD,CAhCM;;IAiCPsB,WAAU,CAAGC,KAAH,EAAUC,KAAV,EAAiBC,IAAjB,EAAuB;MAC/BN,OAAO,CAACC,GAAR,CAAYG,KAAZ;MACAJ,OAAO,CAACC,GAAR,CAAYI,KAAZ;MACAL,OAAO,CAACC,GAAR,CAAYK,IAAZ;IACD,CArCM;;IAsCPC,GAAE,GAAK,CAAE,CAtCF;;IAuCPC,MAAK,GAAK,CAAE,CAvCL;;IAwCPC,YAAW,GAAK,CAAC;;EAxCV,CAtBI;;EAgEbC,OAAM,GAAK;IACT,KAAKpB,IAAL;EACF;;AAlEa,CAAf","names":["axios","AlertComponent","LoaderComponent","ButtonComponent","CardFormComponent","data","active","group_id","$route","query","alert","user_info","user_list","list_belongs","props","is_auth","Number","token","String","components","methods","user","get","headers","then","response","message","show_group","organization_id","catch","error","console","log","organizationId","item_active","index","block","item","add","remove","group_update","mounted"],"sourceRoot":"","sources":["/home/vuacheslavmironov/PAD/web/src/views/GroupShowView.vue"],"sourcesContent":["<template>\n    <main class=\"container-fluid\">\n        <!-- Компонент загрузки -->\n        <LoaderComponent />\n        <!-- End -->\n        <!-- Сообщение о процессе -->\n        <AlertComponent css_class=\"toast align-items-cente right\" v-bind:mess=\"this.alert\" />\n        <!-- END -->\n        <div class=\"mx-auto\">\n            <div class=\"row\">\n                <CardFormComponent>\n                    <div class=\"container mb-3 text-center\">\n                        <h3>Сформировать группу</h3>\n                    </div>\n                    <div class=\"mt-3\">\n                        <div class=\"container\">\n                            <div class=\"row\">\n                                <div class=\"col-5\">\n                                    <p>\n                                        <strong>Студенты</strong>\n                                    </p>\n                                    <div class=\"mt-2 bg-gray\">\n                                        <ul class=\"list-group\">\n                                            <!-- active -->\n                                            <li\n                                                ref=\"studentDataAll\"\n                                                v-for=\"(i, idx) in this.user_list\"\n                                                v-bind:key=\"i\"\n                                                class=\"list-group-item\"\n                                                v-on:click=\"this.item_active(idx, 'studentDataAll', i)\"\n                                            >{{i.last_name}} {{i.first_name}}</li>\n                                        </ul>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-2 svg-var\">\n                                    <svg v-on:click=\"this.add()\" xmlns=\"http://www.w3.org/2000/svg\" style=\"fill: rgba(0, 0, 0, 1);\" class=\"icon-var mx-auto\">\n                                        <path d=\"m19 12-7-6v5H6v2h6v5z\"></path>\n                                    </svg>\n                                    <svg v-on:click=\"this.remove()\" xmlns=\"http://www.w3.org/2000/svg\" style=\"fill: rgba(0, 0, 0, 1);\" class=\"icon-var mx-auto\">\n                                        <path d=\"m5 12 7 6v-5h6v-2h-6V6z\"></path>\n                                    </svg>\n                                </div>\n                                <div class=\"col-5\">\n                                    <p>\n                                        <strong>Участники</strong>\n                                    </p>\n                                    <div class=\"mt-2 bg-gray\">\n                                        <ul class=\"list-group\">\n                                            <li\n                                                ref=\"studentData\"\n                                                v-for=\"(i, idx) in this.list_belongs\"\n                                                v-bind:key=\"i\"\n                                                class=\"list-group-item\"\n                                                v-on:click=\"this.item_active(idx, 'studentData', i)\"\n                                            >{{i.last_name}} {{i.first_name}}</li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"mt-3 mb-2\">\n                        <!-- Компонент кнопки -->\n                        <ButtonComponent text=\"Сохранить\" v-on:click=\"this.group_update()\" css_class=\"btn mt-2 right\"/>\n                    </div>\n                </CardFormComponent>\n            </div>\n        </div>\n    </main>\n</template>\n\n<script>\nimport axios from 'axios'\nimport AlertComponent from '@/components/AlertComponent.vue'\n// import CardFormComponent from '@/components/cards/CardFormComponent.vue'\nimport LoaderComponent from '@/components/LoaderComponent.vue'\nimport ButtonComponent from '@/components/ButtonComponent.vue'\nimport CardFormComponent from '@/components/cards/CardFormComponent.vue'\n\nexport default {\n  data () {\n    return {\n      active: null,\n      group_id: this.$route.query.group_id,\n      alert: null,\n      user_info: null,\n      user_list: null,\n      list_belongs: null\n    }\n  },\n  props: {\n    is_auth: Number,\n    token: String\n  },\n  components: {\n    // CardFormComponent,\n    LoaderComponent,\n    ButtonComponent,\n    AlertComponent,\n    CardFormComponent\n  },\n  methods: {\n    user: function () {\n      if (this.is_auth >= 0) {\n        axios.get('http://localhost:5000/api/user/user-info?access_token=' + this.token,\n          {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }\n        )\n          .then((response) => {\n            this.user_info = response.data[0].message\n            // Вызывать методы использующие пользовательские данные ниже\n            this.show_group(this.user_info.organization_id)\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      }\n    },\n    show_group (organizationId) {\n      axios.get('http://localhost:5000/api/group/show-group?group_id=' + this.group_id + '&&organization_id=' + organizationId,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          }\n        })\n        .then((response) => {\n          this.list_belongs = response.data[0].message.list_belongs\n          this.user_list = response.data[0].message.user_list\n        })\n    },\n    item_active (index, block, item) {\n      console.log(index)\n      console.log(block)\n      console.log(item)\n    },\n    add () {},\n    remove () {},\n    group_update () {}\n  },\n  mounted () {\n    this.user()\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}